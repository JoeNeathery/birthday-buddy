{"version":3,"sources":["components/Login.js","components/Register.js","components/Home.js","App.js","index.js","config.js","components/content/img/login.svg"],"names":["config","require","Login","props","state","show","errorDisplayList","handleInputChange","bind","handleSubmit","handleValidation","handleClose","handleShow","event","target","this","setState","name","value","valid","trim","push","data","fetch","server","host","method","headers","body","JSON","stringify","then","response","json","responseJSON","authToken","parentMethod","console","log","className","ref","containerRef","src","loginImg","alt","htmlFor","type","onChange","placeholder","onClick","id","Modal","onHide","Header","closeButton","Title","Body","map","errorsToDisplay","Footer","Button","variant","React","Component","Register","handleDateChange","date","birthDate","length","required","selected","placeholderText","Home","App","isLogginActive","isLoggedIn","handleLogin","loggedIn","token","rightSide","classList","add","remove","prevState","display","current","currentActive","container","changeState","RightSide","process","ReactDOM","render","StrictMode","document","getElementById","module","exports","production","port","development"],"mappings":"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","file":"static/js/main.62a5ec81.chunk.js","sourcesContent":["import React from 'react';\r\nimport loginImg from './content/img/login.svg';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nvar config = require('../../src/config')[process.env.NODE_ENV];\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            errorDisplayList: []\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    handleValidation(){\r\n        var valid = true;\r\n\r\n        //email\r\n        if (!this.state[\"email\"] || this.state[\"email\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Email is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //password\r\n        if (!this.state[\"password\"] || this.state[\"password\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Password is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    }\r\n    \r\n    handleClose(){\r\n        this.setState({show: false, errorDisplayList: []});\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({show: true});\r\n    }\r\n\r\n    handleSubmit() {\r\n        var valid = this.handleValidation();\r\n        \r\n        if(!valid)\r\n        {\r\n            this.handleShow();\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            \"email\": this.state[\"email\"],\r\n            \"password\": this.state[\"password\"]\r\n        };\r\n\r\n        fetch(config.server.host + \"/auth\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n        .then((responseJSON) => {\r\n            if(responseJSON[\"errors\"])\r\n            {\r\n                this.state.errorDisplayList.push(responseJSON[\"errors\"]);\r\n                this.handleShow();\r\n            }\r\n            else\r\n            {\r\n                var authToken = \"Bearer \" + responseJSON[\"accessToken\"];\r\n                this.props.parentMethod(true, authToken);\r\n                console.log(responseJSON);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base-container\" ref={this.props.containerRef}>\r\n                <div className=\"content\">\r\n                    <div className=\"image\">\r\n                        <img src={loginImg} alt=\"Login\"/>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" name=\"email\" onChange={this.handleInputChange} placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" onChange={this.handleInputChange} placeholder=\"Password\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <input type=\"submit\" onClick={this.handleSubmit} className=\"btn\" id=\"loginBtn\" value=\"Login\" />\r\n                </div>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Uh Oh...</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ul className=\"list-group\">\r\n                        {this.state.errorDisplayList.map(errorsToDisplay => (\r\n                            <li className=\"list-group-item\"><span className=\"errorValues\">{errorsToDisplay}</span></li>\r\n                        ))} \r\n                        </ul>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" id=\"modalCloseBtn\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nvar config = require('../../src/config')[process.env.NODE_ENV];\r\n\r\nexport class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            errorDisplayList: []\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n            birthDate: date\r\n        });\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    handleValidation() {\r\n        var valid = true;\r\n\r\n        //firstName\r\n        if (!this.state[\"firstName\"] || this.state[\"firstName\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"First Name is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //lastName\r\n        if (!this.state[\"lastName\"] || this.state[\"lastName\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Last Name is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //birthDate\r\n        if (!this.state[\"birthDate\"]) {\r\n            this.state.errorDisplayList.push(\"Birth Date is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //email\r\n        if (!this.state[\"email\"] || this.state[\"email\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Email is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //password\r\n        if (!this.state[\"password\"] || this.state[\"password\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Password is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        //confirmPassword\r\n        if (!this.state[\"confirmPassword\"] || this.state[\"confirmPassword\"].trim() === \"\") {\r\n            this.state.errorDisplayList.push(\"Confirm Password is Required.\");\r\n            valid = false;\r\n        }\r\n\r\n        if(this.state[\"password\"] && this.state[\"confirmPassword\"]){\r\n            if(this.state[\"password\"] !== this.state[\"confirmPassword\"]){\r\n                this.state.errorDisplayList.push(\"Passwords must Match.\");\r\n                valid = false;\r\n            }\r\n\r\n            if(this.state[\"password\"].length < 8 || this.state[\"confirmPassword\"] < 8){\r\n                this.state.errorDisplayList.push(\"Password must be at least 8 characters.\")\r\n                valid = false;\r\n            }\r\n\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({show: false, errorDisplayList: []});\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({show: true});\r\n    }\r\n\r\n    handleSubmit() {\r\n\r\n        var valid = this.handleValidation();\r\n        //not valid\r\n        if (!valid) {\r\n            this.handleShow();\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            \"firstName\": this.state[\"firstName\"],\r\n            \"lastName\": this.state[\"lastName\"],\r\n            \"dateOfBirth\": this.state[\"birthDate\"],\r\n            \"email\": this.state[\"email\"],\r\n            \"password\": this.state[\"password\"]\r\n        };\r\n        \r\n        fetch(config.server.host + \"/users\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n          .then((responseJSON) => {\r\n              if(responseJSON[\"errors\"])\r\n              {\r\n                  this.state.errorDisplayList.push(responseJSON[\"errors\"]);\r\n                  this.handleShow();\r\n              }\r\n              else{\r\n                  //this handle success case \r\n              }\r\n          });\r\n          return;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"base-container\" ref={this.props.containerRef}>\r\n                <div className=\"content\">\r\n                    <div className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" name=\"firstName\" onChange={this.handleInputChange} placeholder=\"First Name\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" name=\"lastName\" onChange={this.handleInputChange} placeholder=\"Last Name\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"dob\">Date of Birth</label>\r\n                            <DatePicker selected={this.state.birthDate} name=\"birthDate\" onChange={this.handleDateChange} placeholderText=\"MM/DD/YYYY\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" name=\"email\" onChange={this.handleInputChange} placeholder=\"Email\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" name=\"password\" onChange={this.handleInputChange} placeholder=\"Password\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"password\" name=\"confirmPassword\" onChange={this.handleInputChange} placeholder=\"Confirm Password\" required />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <input type=\"submit\" onClick={this.handleSubmit} className=\"btn\" id=\"registerBtn\" value=\"Register\" />\r\n                </div>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Uh Oh...</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ul className=\"list-group\">\r\n                        {this.state.errorDisplayList.map(errorsToDisplay => (\r\n                            <li className=\"list-group-item\"><span className=\"errorValues\">{errorsToDisplay}</span></li>\r\n                        ))} \r\n                        </ul>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" id=\"modalCloseBtn\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            errorDisplayList: []\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h1>Welcome Home!</h1>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport { Login, Register, Home } from \"./components/Index\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isLogginActive: true,\r\n      isLoggedIn: false\r\n    };\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  handleLogin(loggedIn, authToken) {\r\n    this.setState({isLoggedIn: loggedIn, token: authToken});\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Add .right by default\r\n    this.rightSide.classList.add(\"right\");\r\n  }\r\n\r\n  changeState() {\r\n    //ES6 Object Destructuring\r\n    const { isLogginActive } = this.state;\r\n  \r\n    //We togglet component classes depending on the current active state \r\n    if (isLogginActive) {\r\n      //Right side for login\r\n      this.rightSide.classList.remove(\"right\");\r\n      this.rightSide.classList.add(\"left\");\r\n    } else {\r\n      //Left side for Register \r\n      this.rightSide.classList.remove(\"left\");\r\n      this.rightSide.classList.add(\"right\");\r\n    }\r\n    //Of course we need to toggel the isLogginActive by inversing it's previous state \r\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\r\n  }\r\n\r\n  render() {\r\n    const isLogginActive = this.state.isLogginActive;\r\n    const isLoggedIn = this.state.isLoggedIn;\r\n    const current = isLogginActive ? \"Register\" : \"Login\";\r\n    const currentActive = isLogginActive ? \"login\" : \"register\";\r\n    let display;\r\n\r\n    if(!isLoggedIn){\r\n      display = \r\n        <div className=\"login\">\r\n          <div className=\"container\" ref={ref => (this.container = ref)}>\r\n            {isLogginActive && (\r\n              <Login containerRef={ref => (this.current = ref)} parentMethod={this.handleLogin} />\r\n            )}\r\n            {!isLogginActive && (\r\n              <Register containerRef={ref => (this.current = ref)} />\r\n            )}\r\n          </div>\r\n          <RightSide\r\n            current={current}\r\n            currentActive={currentActive}\r\n            containerRef={ref => (this.rightSide = ref)}\r\n            onClick={this.changeState.bind(this)}\r\n          />\r\n        </div>;\r\n    }else{\r\n      display = \r\n        <div className=\"home\">\r\n          <Home />\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {display}\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nconst RightSide = props => {\r\n  return (\r\n    <div\r\n      className=\"right-side\"\r\n      ref={props.containerRef}\r\n      onClick={props.onClick}\r\n    >\r\n      <div className=\"inner-container\">\r\n        <div className=\"text\">{props.current}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nvar env = process.env.NODE_ENV;\r\nconsole.log(env);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","var config = {\r\n    production: {\r\n        server: {\r\n            host: \"https://52.87.42.240:3600\",\r\n            port: 3600\r\n        }\r\n    },\r\n    development: {\r\n        server: {\r\n            host: \"http://localhost:3600\",\r\n            port: 3600\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = config;","module.exports = __webpack_public_path__ + \"static/media/login.dfa03c58.svg\";"],"sourceRoot":""}